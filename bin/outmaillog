#!/usr/bin/env perl

use warnings;
use strict;
use Data::Dumper;
use DBI;
use FindBin qw($Bin $Script);

use lib "$Bin/../lib";
use Outspam;

my $conf = {
  'maillog' => '',
  'domain' => '',
  'outmail_bookmark'=> '',
  'db' => '',
  'dbhost' => '',
  'dbuser'=> '',
  'dbpassword' => '',
 };

my $verbose = grep (/--verbose/, @ARGV) ? 1 : 0;

my $config_file = "$Bin/../etc/outspam.conf";
read_config($config_file,$conf);
my $from_filter = '.+\@' . $conf->{'domain'};
my $to_filter = '.+\@(?!' . $conf->{'domain'} . ')[^>]+';


my $conn = db_connect($conf);
(my $init, my $f) = initproc($conf);

my %mail;
my @msgid;
my $cur_last_msg;
while ( <$f> ) {
    next unless / sm-mta\[\d+\]: /;
    my $regex = '^\w+ \d+ (?:\d+:\d+:\d+) \S+ sm-mta\[\d+\]: (\S+): from=<(' .$from_filter. ')>, '.
                'size=(\d+), class=\S+, nrcpts=(\d+), .* relay=[^\[]*\[([\d\.]+)\]';
    if ( /$regex/i ) {
       my $msg = $1;
       if ( defined $init->{'bm_end'} ) {
          undef $init->{'bm_end'} if $init->{'bm_end'} eq $msg;
          next;
       }    
       $mail{$msg} = {'sndr'=>lc $2, 'size'=>$3, 'nrcpts'=>$4, 'relay'=>$5 };
    }    
    elsif ( /^(\w+) (\d+) (\S+) \S+ \S+ (\S+): to=<($to_filter)>, .* stat=(.*)/i ) {
       my $msg = $4;
       next unless $mail{$msg};
       $mail{$msg}->{'time'}=date2sec($3,$2,$1,$init);
       $mail{$msg}->{'rcpt'}=lc $5;
       $mail{$msg}->{'stat'}=stat_simplify($6);
       $mail{$msg}->{'stat'} = "Sent" if $mail{$msg}->{'stat'} =~ /^Sent /;
       $cur_last_msg = $msg;
       print "$msg ",Dumper $mail{$msg} if $verbose;
    }    
}
close $f;

exit 0 unless $cur_last_msg;

foreach my $k (sort keys(%mail)) {
   next unless $mail{$k}->{'rcpt'};
   #print "$k ",Dumper $mail{$k};
   my $query_str = mk_ins_query($k,$mail{$k});
   if ( $query_str ) {
      my $query = $conn->prepare($query_str);
      $query->execute() or query_err($conn,$query_str); 
   }   
}    

wbookmark($conf,$init,$cur_last_msg);

# ====================================================

sub stat_simplify {
    my $stat = shift;
    if ($stat =~ /^Sent /) { $stat = "sent"; }
    #    elsif ($stat =~ /^Deferred/) { $stat = "defered"; }
    $stat =~ s/'/\\'/g;
    return $stat;
}    

sub mk_ins_query {
    (my $msg, my $h) = @_;
    my $q = "";
    #  print Dumper(%$h);
    foreach my $k (keys (%$h)) {
        $q .= ", " if $q;
        if ( $k eq 'stat' ) {
           $q .= "$k=QUOTE(\'$h->{$k}\')"
        }
        else { $q .= "$k=\'$h->{$k}\'"; }
    }
    $q = "insert ignore maillog set msg=\'$msg\', ".$q if $q;
    return $q;
}    

