#!/usr/bin/env perl

use warnings;
use strict;
use Data::Dumper;
use DBI;
use FindBin qw($Bin $Script);

use lib "$Bin/../lib";
use Outspam;

my $conf = {
  'imaplog' => '',
  'domain' => '',
  'imap_bookmark'=> '',
  'db' => '',
  'dbhost' => '',
  'dbuser'=> '',
  'dbpassword' => '',
};


my $verbose = grep (/--verbose/, @ARGV) ? 1 : 0;

my $config_file = "$Bin/../etc/outspam.conf";
read_config($config_file,$conf);

my $conn = db_connect($conf);

(my $init, my $f) = initproc($conf);



my %mail;
my @msgid;

my $cur_last_msg;
while ( <$f> ) {
    next unless / User logged in /;
    if ( /^(\w+) (\d+) (\S+) \S+ \w+\[(\d+)\]: .+ \[([\d+\.]+)\] (\w+) / ) {
       my $id = $4;
       if ( defined $init->{'bm_end'} ) {
          undef $init->{'bm_end'} if $init->{'bm_end'} eq $id;
          next;
       }    
       $mail{$id}->{'time'} = date2sec($3,$2,$1,$init);
       $mail{$id}->{'host'} = $5;
       $mail{$id}->{'user'} = $6;
       $cur_last_msg = $id; 
       print "$id ",Dumper $mail{$id} if $verbose;
    }    
}
close $f;


exit 0 unless defined $cur_last_msg;

foreach my $k (keys(%mail)) {
# print "$k ",Dumper $mail{$k};
   my $query_str = mk_ins_query($k,$mail{$k});
   if ( $query_str ) {
      my $query = $conn->prepare($query_str);
      $query->execute() or query_err($conn,$query_str); 
   }   
}    

wbookmark($conf,$init,$cur_last_msg);

# ====================================================

sub mk_ins_query {
    (my $msg, my $h) = @_;
    my $q = "";
    $q = "insert imaplog (time,user,host) ".
         "values (\'$h->{'time'}\',\'$h->{'user'}\',\'$h->{'host'}\') ".
         "on duplicate key update time = $h->{'time'}";
    return $q;
}    

